@using Abp.Web.Mvc.Alerts
@using FormBizz.Localization
@using FormBizz.Web.Areas.FormBizz.Views.Shared.Components.FormBizzActiveUserDelegationsCombobox
@using FormBizz.Web.Areas.FormBizz.Views.Shared.Components.FormBizzChatToggler
@using FormBizz.Web.Areas.FormBizz.Views.Shared.Components.FormBizzLanguageSwitch
@using FormBizz.Web.Areas.FormBizz.Views.Shared.Components.FormBizzLogo
@using FormBizz.Web.Areas.FormBizz.Views.Shared.Components.FormBizzMenu
@using FormBizz.Web.Areas.FormBizz.Views.Shared.Components.FormBizzQuickThemeSelect
@using FormBizz.Web.Areas.FormBizz.Views.Shared.Components.FormBizzRecentNotifications
@using FormBizz.Web.Areas.FormBizz.Views.Shared.Components.FormBizzSubscriptionBar
@using FormBizz.Web.Areas.FormBizz.Views.Shared.Components.FormBizzToggleDarkMode
@using FormBizz.Web.Areas.FormBizz.Views.Shared.Components.FormBizzUserMenu
@using FormBizz.Web.Areas.FormBizz.Views.Shared.Themes.Theme6.Components.FormBizzTheme6Brand
@using FormBizz.Web.Areas.FormBizz.Views.Shared.Themes.Theme6.Components.FormBizzTheme6Footer

@inject IAlertManager AlertManager
@{
    Layout = "~/Areas/FormBizz/Views/Layout/_Layout.cshtml";
    var theme = await GetTheme();
}

@section Styles{
<link rel="stylesheet" href="@(ApplicationPath)metronic/themes/theme6/css/style.bundle@(CultureHelper.IsRtl ? ".rtl" : "").css" asp-append-version="true" />
<link rel="stylesheet" href="@(ApplicationPath)metronic/themes/theme6/plugins/global/plugins.bundle@(CultureHelper.IsRtl ? ".rtl" : "").css" asp-append-version="true" />
<link rel="stylesheet" abp-href="/Common/Styles/Themes/theme6/metronic-customize.css" asp-append-version="true" />
<link rel="stylesheet" abp-href="/fonts/fonts-montserrat.css" asp-append-version="true" />
    @await RenderSectionAsync("Styles", false)
}

@section Scripts{
    @await RenderSectionAsync("Scripts", false)
}

<div class="d-flex flex-column flex-root">
    <div class="page d-flex flex-row flex-column-fluid">
        <div id="kt_aside" class="aside pb-5 pt-5 pt-lg-0" data-kt-drawer="true" data-kt-drawer-name="aside" data-kt-drawer-activate="{default: true, lg: false}" data-kt-drawer-overlay="true" data-kt-drawer-width="{default:'80px', '300px': '100px'}" data-kt-drawer-direction="start" data-kt-drawer-toggle="#kt_aside_mobile_toggle">
            <div class="aside-logo py-8" id="kt_aside_logo">
                @await Component.InvokeAsync(typeof(FormBizzTheme6BrandViewComponent))
            </div>
            <div class="aside-menu flex-column-fluid" id="kt_aside_menu">
            </div>
        </div>
        <div class="wrapper d-flex flex-column flex-row-fluid" id="kt_wrapper">
            <div id="kt_header" style="" class="header align-items-stretch">
                <div class="@(await GetContainerClass()) d-flex align-items-stretch justify-content-between">
                    <div class="d-flex align-items-center d-lg-none ms-n3 me-1" title="Show aside menu">
                        <div class="btn btn-icon btn-active-light-primary w-30px h-30px w-md-40px h-md-40px" id="kt_header_menu_mobile_toggle">
                            <span class="svg-icon svg-icon-2x mt-1">
                                <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none">
                                    <path d="M21 7H3C2.4 7 2 6.6 2 6V4C2 3.4 2.4 3 3 3H21C21.6 3 22 3.4 22 4V6C22 6.6 21.6 7 21 7Z" fill="black"></path>
                                    <path opacity="0.3" d="M21 14H3C2.4 14 2 13.6 2 13V11C2 10.4 2.4 10 3 10H21C21.6 10 22 10.4 22 11V13C22 13.6 21.6 14 21 14ZM22 20V18C22 17.4 21.6 17 21 17H3C2.4 17 2 17.4 2 18V20C2 20.6 2.4 21 3 21H21C21.6 21 22 20.6 22 20Z" fill="black"></path>
                                </svg>
                            </span>
                        </div>
                    </div>
                    <div class="d-lg-none d-flex align-items-center flex-grow-1 flex-lg-grow-0">
                        <a href="@Url.Action("Index", "Home", new {area = string.Empty})" class="d-flex align-items-center">
                            @await Component.InvokeAsync(typeof(FormBizzLogoViewComponent), new
                            {
                                LogoSkin = theme.BaseSettings.Layout.DarkMode ? "dark-sm": "light-sm",
                                logoClass = "h-30px"
                            })
                        </a>
                    </div>
                    <div class="d-flex align-items-stretch justify-content-between flex-lg-grow-1">
                        <div class="d-flex align-items-stretch" id="kt_header_nav">
                            <div class="header-menu align-items-stretch" data-kt-drawer="true" data-kt-drawer-name="header-menu" data-kt-drawer-activate="{default: true, lg: false}" data-kt-drawer-overlay="true" data-kt-drawer-width="{default:'200px', '300px': '250px'}" data-kt-drawer-direction="end" data-kt-drawer-toggle="#kt_header_menu_mobile_toggle" data-kt-swapper="true" data-kt-swapper-mode="prepend" data-kt-swapper-parent="{default: '#kt_body', lg: '#kt_header_nav'}">
                                @await Component.InvokeAsync(typeof(FormBizzMenuViewComponent), new
                                {
                                    currentPageName = ViewBag.CurrentPageName, 
                                    isLeftMenuUsed = false,
                                    topMenuClass = "menu menu-lg-rounded menu-column menu-lg-row menu-state-bg menu-title-gray-600 menu-state-title-primary menu-state-icon-primary menu-state-bullet-primary menu-arrow-gray-400 fw-bold fs-6 my-5 my-lg-0 align-items-stretch"
                                })
                            </div>
                        </div>
                        <div class="d-flex align-items-stretch flex-shrink-0">
                            <div class="d-flex align-items-stretch flex-shrink-0">
                                @await Component.InvokeAsync(typeof(FormBizzActiveUserDelegationsComboboxViewComponent))
                                @await Component.InvokeAsync(typeof(FormBizzSubscriptionBarViewComponent), new {
                                    cssClass = "btn btn-icon btn-active-light-primary position-relative btn btn-icon btn-active-light-primary w-30px h-30px w-md-40px h-md-40px"
                                })
                                @await Component.InvokeAsync(typeof(FormBizzQuickThemeSelectViewComponent), new {
                                    cssClass = "btn btn-icon btn-active-light-primary position-relative btn btn-icon btn-active-light-primary w-30px h-30px w-md-40px h-md-40px"
                                })
                                @await Component.InvokeAsync(typeof(FormBizzLanguageSwitchViewComponent), new {
                                    cssClass = "btn btn-icon btn-active-light-primary position-relative btn btn-icon btn-active-light-primary w-30px h-30px w-md-40px h-md-40px"
                                })
                                @await Component.InvokeAsync(typeof(FormBizzRecentNotificationsViewComponent), new {
                                    cssClass = "btn btn-icon btn-active-light-primary position-relative btn btn-icon btn-active-light-primary w-30px h-30px w-md-40px h-md-40px"
                                })
                                @await Component.InvokeAsync(typeof(FormBizzChatTogglerViewComponent), new {
                                    cssClass = "btn btn-icon btn-active-light-primary position-relative btn btn-icon btn-active-light-primary w-30px h-30px w-md-40px h-md-40px"
                                })
                                @await Component.InvokeAsync(typeof(FormBizzToggleDarkModeViewComponent), new
                                {
                                    cssClass = "btn btn-icon btn-active-light-primary position-relative btn btn-icon btn-active-light-primary w-30px h-30px w-md-40px h-md-40px",
                                    isDarkModeActive = theme.BaseSettings.Layout.DarkMode
                                })
                                @await Component.InvokeAsync(typeof(FormBizzUserMenuViewComponent), new {
                                    togglerCssClass = "cursor-pointer symbol symbol-30px symbol-md-40px",
                                })
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="content d-flex flex-column flex-column-fluid pt-5" id="kt_content">
                <div id="kt_content_container">
                    @if (AlertManager.Alerts.Any())
                    {
                        <div id="AbpPageAlerts">
                            @foreach (var alertMessage in AlertManager.Alerts)
                            {
                                <div class="alert alert-@alertMessage.Type.ToString().ToLower() @Html.Raw(alertMessage.Dismissible?"alert-dismissible":"")" role="alert">
                                    <div class="alert-text">
                                        <h4 class="alert-heading">
                                            @alertMessage.Title
                                        </h4>
                                        <p>@alertMessage.Text</p>
                                    </div>
                                    @if (alertMessage.Dismissible)
                                    {
                                        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                                    }
                                </div>
                            }
                        </div>
                    }
                    @RenderBody()
                </div>
            </div>
            <div class="footer py-4 d-flex flex-lg-column" id="kt_footer">
                <div class="container-fluid d-flex flex-column flex-md-row align-items-center justify-content-between">
                    @await Component.InvokeAsync(typeof(FormBizzTheme6FooterViewComponent))
                </div>
            </div>
        </div>
    </div>
</div>